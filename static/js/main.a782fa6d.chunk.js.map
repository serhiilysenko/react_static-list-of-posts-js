{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"sx8IAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,QCFGC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BF,EAGEE,EAHFF,KACAD,EAEEG,EAFFH,MACAI,EACED,EADFC,KAGF,OACE,sBAAKN,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCG,IAEvC,sBAAMH,UAAU,wBAAhB,gBAEA,mBACEA,UAAU,qBACVC,KAAI,iBAAYC,GAFlB,SAIGG,EAAQH,WAIb,qBAAKF,UAAU,oBAAf,SACGM,QCrBIC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKR,UAAU,cAAf,SACGQ,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQK,UCFrCC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAd,EAGEa,EAHFb,KACAS,EAEEI,EAFFJ,SACAF,EACEM,EADFN,KAGF,OACE,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,IAEhCd,GACD,8BACE,sBAAMC,UAAU,qBAAhB,uBAEA,cAAC,EAAD,CAAUD,KAAMA,UAKpB,mBAAGC,UAAU,iBAAb,SACGM,IAGFE,EAASM,OACN,cAAC,EAAD,CAAaN,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,oCCjCCO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKF,UCSX,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cb,MAVmBmB,EAUDN,EAAKM,OAThBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MAAW,MAU3DV,UAPsBa,EAOGT,EAAKF,GANvBY,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQmB,SAAWH,QADjE,IAAwBA,EAJHH,KAeRO,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCtBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a782fa6d.chunk.js","sourcesContent":["export const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        <span className=\"CommentInfo__title-by\">by</span>\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {comment.email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    user,\n    comments,\n    body,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        {user && (\n        <p>\n          <span className=\"PostInfo__title-by\">Posted by</span>\n\n          <UserInfo user={user} />\n        </p>\n        )}\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {comments.length\n        ? <CommentList comments={comments} />\n        : (\n          <>\n            <hr />\n\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        post={post}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentById(commentId) {\n  return commentsFromServer.filter(comment => comment.postId === commentId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}